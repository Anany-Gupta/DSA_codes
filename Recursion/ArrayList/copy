
import java.util.*;

public class maze {

    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        ArrayList<String> answer = getMazePaths(1, 1, n, m);
        System.out.println(answer);
        sc.close();
    }

    // sr - source row
    // sc - source column
    // dr - destination row
    // dc - destination column
    public static ArrayList<String> getMazePaths(int sr, int sc, int dr, int dc) {
        ArrayList<String> resultMove = new ArrayList<>();
        if (dr == 1) {
            if (dc >= 2) {
                ArrayList<String> firstMove = new ArrayList<>();
                firstMove.add("h");
                return firstMove;
            } else {
                ArrayList<String> horizontalM = getMazePaths(sr, sc, dr, dc - 1);
                for (String s : horizontalM)

                    resultMove.add(s + "h");
                    return resultMove;

            }

        }
        if (dc == 1) {
            if (dr == 2) {
                ArrayList<String> firstMove = new ArrayList<>();
                firstMove.add("v");
                return firstMove;
            } else {
                ArrayList<String> verticalM = getMazePaths(sr, sc, dr - 1, dc);
                for (String s : verticalM)
                    resultMove.add(s + "v");
                    return resultMove;
            }
        }

        if (dc != 1 || dr != 1) {
            ArrayList<String> horizontalM = getMazePaths(sr, sc, dr, dc - 1);
            ArrayList<String> verticalM = getMazePaths(sr, sc, dr - 1, dc);

            
            for (String s : horizontalM)
                resultMove.add(s + "h");
            for (String s : verticalM)
                resultMove.add(s + "v");
            return resultMove;
        }
        return resultMove;
    }

}